var searchIndex = JSON.parse('{\
"avr_libc":{"doc":"Rust bindings to avr-libc.","i":[[7,"errno","avr_libc","",null,null],[5,"isalnum","","\\\\ingroup ctype",null,null],[5,"isalpha","","\\\\ingroup ctype",null,null],[5,"isascii","","\\\\ingroup ctype",null,null],[5,"isblank","","\\\\ingroup ctype",null,null],[5,"iscntrl","","\\\\ingroup ctype",null,null],[5,"isdigit","","\\\\ingroup ctype",null,null],[5,"isgraph","","\\\\ingroup ctype",null,null],[5,"islower","","\\\\ingroup ctype",null,null],[5,"isprint","","\\\\ingroup ctype",null,null],[5,"ispunct","","\\\\ingroup ctype",null,null],[5,"isspace","","\\\\ingroup ctype",null,null],[5,"isupper","","\\\\ingroup ctype",null,null],[5,"isxdigit","","\\\\ingroup ctype",null,null],[5,"toascii","","\\\\ingroup ctype",null,null],[5,"tolower","","\\\\ingroup ctype",null,null],[5,"toupper","","\\\\ingroup ctype",null,null],[5,"abort","","The abort() function causes abnormal program termination …",null,null],[5,"abs","","The abs() function computes the absolute value of the …",null,null],[5,"labs","","The labs() function computes the absolute value of the …",null,null],[5,"bsearch","","The bsearch() function searches an array of \\\\c nmemb …",null,null],[5,"div","","The div() function computes the value \\\\c num/denom and …",null,null],[5,"ldiv","","The ldiv() function computes the value \\\\c num/denom and …",null,null],[5,"qsort","","The qsort() function is a modified partition-exchange …",null,null],[5,"strtol","","The strtol() function converts the string in \\\\c nptr to a …",null,null],[5,"strtoul","","The strtoul() function converts the string in \\\\c nptr to …",null,null],[5,"atol","","The atol() function converts the initial portion of the …",null,null],[5,"atoi","","The atoi() function converts the initial portion of the …",null,null],[5,"exit","","The exit() function terminates the application.  Since …",null,null],[5,"malloc","","The malloc() function allocates \\\\c size bytes of memory. …",null,null],[5,"free","","The free() function causes the allocated memory …",null,null],[7,"__malloc_margin","","",null,null],[7,"__malloc_heap_start","","",null,null],[7,"__malloc_heap_end","","",null,null],[5,"calloc","","Allocate \\\\c nele elements of \\\\c size each.  Identical to …",null,null],[5,"realloc","","The realloc() function tries to change the size of the …",null,null],[5,"strtod","","",null,null],[5,"atof","","\\\\ingroup avr_stdlib \\\\fn  double atof (const char *nptr)",null,null],[5,"rand","","The rand() function computes a sequence of pseudo-random …",null,null],[5,"srand","","Pseudo-random number generator seeding; see rand().",null,null],[5,"rand_r","","Variant of rand() that stores the context in the …",null,null],[5,"random","","\\\\ingroup avr_stdlib The random() function computes a …",null,null],[5,"srandom","","\\\\ingroup avr_stdlib Pseudo-random number generator …",null,null],[5,"random_r","","\\\\ingroup avr_stdlib Variant of random() that stores the …",null,null],[5,"dtostre","","\\\\ingroup avr_stdlib The dtostre() function converts the …",null,null],[5,"dtostrf","","\\\\ingroup avr_stdlib The dtostrf() function converts the …",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"__assert","","",null,null],[5,"time","","The time function returns the systems current time stamp. …",null,null],[5,"difftime","","The difftime function returns the difference between two …",null,null],[7,"_CLOCKS_PER_SEC_","","",null,null],[5,"clock","","",null,null],[5,"mktime","","This function \'compiles\' the elements of a broken-down …",null,null],[5,"mk_gmtime","","This function \'compiles\' the elements of a broken-down …",null,null],[5,"gmtime","","The gmtime function converts the time stamp pointed to by …",null,null],[5,"gmtime_r","","Re entrant version of gmtime().",null,null],[5,"localtime","","The localtime function converts the time stamp pointed to …",null,null],[5,"localtime_r","","Re entrant version of localtime().",null,null],[5,"asctime","","The asctime function converts the broken-down time of …",null,null],[5,"asctime_r","","Re entrant version of asctime().",null,null],[5,"ctime","","The ctime function is equivalent to …",null,null],[5,"ctime_r","","Re entrant version of ctime().",null,null],[5,"isotime","","The isotime function constructs an ascii string in the …",null,null],[5,"isotime_r","","Re entrant version of isotime()",null,null],[5,"strftime","","A complete description of strftime() is beyond the pale …",null,null],[5,"set_dst","","Specify the Daylight Saving function.",null,null],[5,"set_zone","","Set the \'time zone\'. The parameter is given in seconds …",null,null],[5,"set_system_time","","Initialize the system time. Examples are...",null,null],[5,"system_tick","","Maintain the system time by calling this function at a …",null,null],[5,"is_leap_year","","Return 1 if year is a leap year, zero if it is not.",null,null],[5,"month_length","","Return the length of month, given the year and month, …",null,null],[5,"week_of_year","","Return the calendar week of year, where week 1 is …",null,null],[5,"week_of_month","","Return the calendar week of month, where the first week …",null,null],[5,"iso_week_date","","Return a week_date structure with the ISO_8601 week based …",null,null],[5,"iso_week_date_r","","Re-entrant version of iso-week_date.",null,null],[5,"fatfs_time","","Convert a Y2K time stamp into a FAT file system time …",null,null],[5,"set_position","","Set the geographic coordinates of the \'observer\', for use …",null,null],[5,"equation_of_time","","Computes the difference between apparent solar time and …",null,null],[5,"daylight_seconds","","Computes the amount of time the sun is above the horizon, …",null,null],[5,"solar_noon","","Computes the time of solar noon, at the location of the …",null,null],[5,"sun_rise","","Return the time of sunrise, at the location of the …",null,null],[5,"sun_set","","Return the time of sunset, at the location of the …",null,null],[5,"solar_declination","","Returns the declination of the sun in radians.",null,null],[5,"moon_phase","","Returns an approximation to the phase of the moon. The …",null,null],[5,"gm_sidereal","","Returns Greenwich Mean Sidereal Time, as seconds into the …",null,null],[5,"lm_sidereal","","Returns Local Mean Sidereal Time, as seconds into the …",null,null],[5,"cos","","The cos() function returns the cosine of \\\\a __x, measured …",null,null],[5,"sin","","The sin() function returns the sine of \\\\a __x, measured …",null,null],[5,"tan","","The tan() function returns the tangent of \\\\a __x, …",null,null],[5,"fabs","","The fabs() function computes the absolute value of a …",null,null],[5,"fmod","","The function fmod() returns the floating-point remainder …",null,null],[5,"modf","","The modf() function breaks the argument \\\\a __x into …",null,null],[5,"modff","","An alias for modf().",null,null],[5,"sqrt","","The sqrt() function returns the non-negative square root …",null,null],[5,"sqrtf","","An alias for sqrt().",null,null],[5,"cbrt","","The cbrt() function returns the cube root of \\\\a __x.",null,null],[5,"hypot","","The hypot() function returns sqrt(__x*__x + __y*__y). This…",null,null],[5,"square","","The function square() returns __x * __x.",null,null],[5,"floor","","The floor() function returns the largest integral value …",null,null],[5,"ceil","","The ceil() function returns the smallest integral value …",null,null],[5,"frexp","","The frexp() function breaks a floating-point number into …",null,null],[5,"ldexp","","The ldexp() function multiplies a floating-point number …",null,null],[5,"exp","","The exp() function returns the exponential value of \\\\a __…",null,null],[5,"cosh","","The cosh() function returns the hyperbolic cosine of \\\\a __…",null,null],[5,"sinh","","The sinh() function returns the hyperbolic sine of \\\\a __x.",null,null],[5,"tanh","","The tanh() function returns the hyperbolic tangent of \\\\a _…",null,null],[5,"acos","","The acos() function computes the principal value of the …",null,null],[5,"asin","","The asin() function computes the principal value of the …",null,null],[5,"atan","","The atan() function computes the principal value of the …",null,null],[5,"atan2","","The atan2() function computes the principal value of the …",null,null],[5,"log","","The log() function returns the natural logarithm of …",null,null],[5,"log10","","The log10() function returns the logarithm of argument \\\\a …",null,null],[5,"pow","","The function pow() returns the value of \\\\a __x to the …",null,null],[5,"isnan","","The function isnan() returns 1 if the argument \\\\a __x …",null,null],[5,"isinf","","The function isinf() returns 1 if the argument \\\\a __x is …",null,null],[5,"signbit","","The signbit() function returns a nonzero value if the …",null,null],[5,"fdim","","The fdim() function returns max(__x - __y, 0). If \\\\a __x …",null,null],[5,"fma","","The fma() function performs floating-point multiply-add. …",null,null],[5,"fmax","","The fmax() function returns the greater of the two values …",null,null],[5,"fmin","","The fmin() function returns the lesser of the two values …",null,null],[5,"trunc","","The trunc() function rounds \\\\a __x to the nearest integer …",null,null],[5,"round","","The round() function rounds \\\\a __x to the nearest …",null,null],[5,"lround","","The lround() function rounds \\\\a __x to the nearest …",null,null],[5,"lrint","","The lrint() function rounds \\\\a __x to the nearest …",null,null],[5,"ffs","","\\\\ingroup avr_string \\\\fn int ffs(int val);",null,null],[5,"ffsl","","\\\\ingroup avr_string \\\\fn int ffsl(long val);",null,null],[5,"ffsll","","\\\\ingroup avr_string \\\\fn int ffsll(long long val);",null,null],[5,"memccpy","","\\\\ingroup avr_string \\\\fn void *memccpy(void *dest, const …",null,null],[5,"memchr","","\\\\ingroup avr_string \\\\fn void *memchr(const void *src, int …",null,null],[5,"memcmp","","\\\\ingroup avr_string \\\\fn int memcmp(const void *s1, const …",null,null],[5,"memcpy","","\\\\ingroup avr_string \\\\fn void *memcpy(void *dest, const …",null,null],[5,"memmem","","\\\\ingroup avr_string \\\\fn void *memmem(const void *s1, …",null,null],[5,"memmove","","\\\\ingroup avr_string \\\\fn void *memmove(void *dest, const …",null,null],[5,"memrchr","","\\\\ingroup avr_string \\\\fn void *memrchr(const void *src, …",null,null],[5,"memset","","\\\\ingroup avr_string \\\\fn void *memset(void *dest, int val, …",null,null],[5,"strcat","","\\\\ingroup avr_string \\\\fn char *strcat(char *dest, const …",null,null],[5,"strchr","","\\\\ingroup avr_string \\\\fn char *strchr(const char *src, int …",null,null],[5,"strchrnul","","\\\\ingroup avr_string \\\\fn char *strchrnul(const char *s, …",null,null],[5,"strcmp","","\\\\ingroup avr_string \\\\fn int strcmp(const char *s1, const …",null,null],[5,"strcpy","","\\\\ingroup avr_string \\\\fn char *strcpy(char *dest, const …",null,null],[5,"strcasecmp","","\\\\ingroup avr_string \\\\fn int strcasecmp(const char *s1, …",null,null],[5,"strcasestr","","\\\\ingroup avr_string \\\\fn char *strcasestr(const char *s1, …",null,null],[5,"strcspn","","\\\\ingroup avr_string \\\\fn size_t strcspn(const char *s, …",null,null],[5,"strdup","","\\\\ingroup avr_string \\\\fn char *strdup(const char *s1) …",null,null],[5,"strlcat","","\\\\ingroup avr_string \\\\fn size_t strlcat(char *dst, const …",null,null],[5,"strlcpy","","\\\\ingroup avr_string \\\\fn size_t strlcpy(char *dst, const …",null,null],[5,"strlen","","\\\\ingroup avr_string \\\\fn size_t strlen(const char *src) …",null,null],[5,"strlwr","","\\\\ingroup avr_string \\\\fn char *strlwr(char *s) \\\\brief …",null,null],[5,"strncat","","\\\\ingroup avr_string \\\\fn char *strncat(char *dest, const …",null,null],[5,"strncmp","","\\\\ingroup avr_string \\\\fn int strncmp(const char *s1, const …",null,null],[5,"strncpy","","\\\\ingroup avr_string \\\\fn char *strncpy(char *dest, const …",null,null],[5,"strncasecmp","","\\\\ingroup avr_string \\\\fn int strncasecmp(const char *s1, …",null,null],[5,"strnlen","","\\\\ingroup avr_string \\\\fn size_t strnlen(const char *src, …",null,null],[5,"strpbrk","","\\\\ingroup avr_string \\\\fn char *strpbrk(const char *s, …",null,null],[5,"strrchr","","\\\\ingroup avr_string \\\\fn char *strrchr(const char *src, …",null,null],[5,"strrev","","\\\\ingroup avr_string \\\\fn char *strrev(char *s) \\\\brief …",null,null],[5,"strsep","","\\\\ingroup avr_string \\\\fn char *strsep(char **sp, const …",null,null],[5,"strspn","","\\\\ingroup avr_string \\\\fn size_t strspn(const char *s, …",null,null],[5,"strstr","","\\\\ingroup avr_string \\\\fn char *strstr(const char *s1, …",null,null],[5,"strtok","","\\\\ingroup avr_string \\\\fn char *strtok(char *s, const char *…",null,null],[5,"strtok_r","","\\\\ingroup avr_string \\\\fn char *strtok_r(char *string, …",null,null],[5,"strupr","","\\\\ingroup avr_string \\\\fn char *strupr(char *s) \\\\brief …",null,null],[5,"strcoll","","",null,null],[5,"strerror","","",null,null],[5,"strxfrm","","",null,null],[5,"write","","",null,null],[5,"read","","",null,null],[5,"lseek","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[7,"__iob","","",null,null],[5,"fdevopen","","",null,null],[5,"fclose","","This function closes \\\\c stream, and disallows and further …",null,null],[5,"vfprintf","","\\\\c vfprintf is the central facility of the \\\\c printf …",null,null],[5,"vfprintf_P","","Variant of \\\\c vfprintf() that uses a \\\\c fmt string that …",null,null],[5,"fputc","","The function \\\\c fputc sends the character \\\\c c (though …",null,null],[5,"putc","","",null,null],[5,"putchar","","",null,null],[5,"printf","","The function \\\\c printf performs formatted output to stream…",null,null],[5,"printf_P","","Variant of \\\\c printf() that uses a \\\\c fmt string that …",null,null],[5,"vprintf","","The function \\\\c vprintf performs formatted output to …",null,null],[5,"sprintf","","Variant of \\\\c printf() that sends the formatted characters…",null,null],[5,"sprintf_P","","Variant of \\\\c sprintf() that uses a \\\\c fmt string that …",null,null],[5,"snprintf","","Like \\\\c sprintf(), but instead of assuming \\\\c s to be of …",null,null],[5,"snprintf_P","","Variant of \\\\c snprintf() that uses a \\\\c fmt string that …",null,null],[5,"vsprintf","","Like \\\\c sprintf() but takes a variable argument list for …",null,null],[5,"vsprintf_P","","Variant of \\\\c vsprintf() that uses a \\\\c fmt string that …",null,null],[5,"vsnprintf","","Like \\\\c vsprintf(), but instead of assuming \\\\c s to be of …",null,null],[5,"vsnprintf_P","","Variant of \\\\c vsnprintf() that uses a \\\\c fmt string that …",null,null],[5,"fprintf","","The function \\\\c fprintf performs formatted output to \\\\c …",null,null],[5,"fprintf_P","","Variant of \\\\c fprintf() that uses a \\\\c fmt string that …",null,null],[5,"fputs","","Write the string pointed to by \\\\c str to stream \\\\c stream.",null,null],[5,"fputs_P","","Variant of fputs() where \\\\c str resides in program memory.",null,null],[5,"puts","","Write the string pointed to by \\\\c str, and a trailing …",null,null],[5,"puts_P","","Variant of puts() where \\\\c str resides in program memory.",null,null],[5,"fwrite","","Write \\\\c nmemb objects, \\\\c size bytes each, to \\\\c stream. …",null,null],[5,"fgetc","","The function \\\\c fgetc reads a character from \\\\c stream.  …",null,null],[5,"getc","","",null,null],[5,"getchar","","",null,null],[5,"ungetc","","The ungetc() function pushes the character \\\\c c …",null,null],[5,"fgets","","Read at most size - 1 bytes from \\\\c stream, until a …",null,null],[5,"gets","","Similar to fgets() except that it will operate on stream …",null,null],[5,"fread","","Read \\\\c nmemb objects, \\\\c size bytes each, from \\\\c stream,…",null,null],[5,"clearerr","","Clear the error and end-of-file flags of \\\\c stream.",null,null],[5,"feof","","Test the end-of-file flag of \\\\c stream.  This flag can …",null,null],[5,"ferror","","Test the error flag of \\\\c stream.  This flag can only be …",null,null],[5,"vfscanf","","",null,null],[5,"vfscanf_P","","Variant of vfscanf() using a \\\\c fmt string in program …",null,null],[5,"fscanf","","The function \\\\c fscanf performs formatted input, reading …",null,null],[5,"fscanf_P","","Variant of fscanf() using a \\\\c fmt string in program …",null,null],[5,"scanf","","The function \\\\c scanf performs formatted input from …",null,null],[5,"scanf_P","","Variant of scanf() where \\\\c fmt resides in program memory.",null,null],[5,"vscanf","","The function \\\\c vscanf performs formatted input from …",null,null],[5,"sscanf","","The function \\\\c sscanf performs formatted input, reading …",null,null],[5,"sscanf_P","","Variant of sscanf() using a \\\\c fmt string in program …",null,null],[5,"fgetpos","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fdopen","","",null,null],[5,"fseek","","",null,null],[5,"fsetpos","","",null,null],[5,"ftell","","",null,null],[5,"fileno","","",null,null],[5,"perror","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"rewind","","",null,null],[5,"setbuf","","",null,null],[5,"setvbuf","","",null,null],[5,"tmpfile","","",null,null],[5,"tmpnam","","",null,null],[5,"alloca","","\\\\ingroup alloca \\\\brief Allocate \\\\a __size bytes of space …",null,null],[5,"setjmp","","\\\\ingroup setjmp \\\\brief Save stack context for non-local …",null,null],[5,"longjmp","","\\\\ingroup setjmp \\\\brief Non-local jump to a saved stack …",null,null],[5,"signal","","",null,null],[7,"sig_atomic_t","","",null,null],[5,"raise","","",null,null],[5,"usa_dst","","",null,null],[5,"eu_dst","","",null,null],[7,"__signature","","",null,null],[5,"__builtin_avr_sei","","\\\\ingroup avr_builtins",null,null],[5,"__builtin_avr_cli","","\\\\ingroup avr_builtins",null,null],[5,"__builtin_avr_sleep","","\\\\ingroup avr_builtins",null,null],[5,"__builtin_avr_wdr","","\\\\ingroup avr_builtins",null,null],[5,"__builtin_avr_swap","","\\\\ingroup avr_builtins",null,null],[5,"__builtin_avr_fmul","","\\\\ingroup avr_builtins",null,null],[5,"__builtin_avr_fmuls","","\\\\ingroup avr_builtins",null,null],[5,"__builtin_avr_fmulsu","","\\\\ingroup avr_builtins",null,null],[5,"__builtin_avr_delay_cycles","","\\\\ingroup avr_builtins",null,null],[5,"memchr_P","","\\\\ingroup avr_pgmspace \\\\fn const void * memchr_P(const …",null,null],[5,"memcmp_P","","\\\\ingroup avr_pgmspace \\\\fn int memcmp_P(const void *s1, …",null,null],[5,"memccpy_P","","\\\\ingroup avr_pgmspace \\\\fn void *memccpy_P (void *dest, …",null,null],[5,"memcpy_P","","\\\\ingroup avr_pgmspace \\\\fn void *memcpy_P(void *dest, …",null,null],[5,"memmem_P","","\\\\ingroup avr_pgmspace \\\\fn void *memmem_P(const void *s1, …",null,null],[5,"memrchr_P","","\\\\ingroup avr_pgmspace \\\\fn const void +memrchr_P(const …",null,null],[5,"strcat_P","","\\\\ingroup avr_pgmspace \\\\fn char *strcat_P(char *dest, …",null,null],[5,"strchr_P","","\\\\ingroup avr_pgmspace \\\\fn const char *strchr_P(const char …",null,null],[5,"strchrnul_P","","\\\\ingroup avr_pgmspace \\\\fn const char *strchrnul_P(const …",null,null],[5,"strcmp_P","","\\\\ingroup avr_pgmspace \\\\fn int strcmp_P(const char *s1, …",null,null],[5,"strcpy_P","","\\\\ingroup avr_pgmspace \\\\fn char *strcpy_P(char *dest, …",null,null],[5,"strcasecmp_P","","\\\\ingroup avr_pgmspace \\\\fn int strcasecmp_P(const char *…",null,null],[5,"strcasestr_P","","\\\\ingroup avr_pgmspace \\\\fn char *strcasestr_P(const char *…",null,null],[5,"strcspn_P","","\\\\ingroup avr_pgmspace \\\\fn size_t strcspn_P(const char *s, …",null,null],[5,"strlcat_P","","\\\\ingroup avr_pgmspace \\\\fn size_t strlcat_P(char *dst, …",null,null],[5,"strlcpy_P","","\\\\ingroup avr_pgmspace \\\\fn size_t strlcpy_P(char *dst, …",null,null],[5,"strnlen_P","","\\\\ingroup avr_pgmspace \\\\fn size_t strnlen_P(const char *…",null,null],[5,"strncmp_P","","\\\\ingroup avr_pgmspace \\\\fn int strncmp_P(const char *s1, …",null,null],[5,"strncasecmp_P","","\\\\ingroup avr_pgmspace \\\\fn int strncasecmp_P(const char *…",null,null],[5,"strncat_P","","\\\\ingroup avr_pgmspace \\\\fn char *strncat_P(char *dest, …",null,null],[5,"strncpy_P","","\\\\ingroup avr_pgmspace \\\\fn char *strncpy_P(char *dest, …",null,null],[5,"strpbrk_P","","\\\\ingroup avr_pgmspace \\\\fn char *strpbrk_P(const char *s, …",null,null],[5,"strrchr_P","","\\\\ingroup avr_pgmspace \\\\fn const char *strrchr_P(const …",null,null],[5,"strsep_P","","\\\\ingroup avr_pgmspace \\\\fn char *strsep_P(char **sp, const …",null,null],[5,"strspn_P","","\\\\ingroup avr_pgmspace \\\\fn size_t strspn_P(const char *s, …",null,null],[5,"strstr_P","","\\\\ingroup avr_pgmspace \\\\fn char *strstr_P(const char *s1, …",null,null],[5,"strtok_P","","\\\\ingroup avr_pgmspace \\\\fn char *strtok_P(char *s, const …",null,null],[5,"strtok_rP","","\\\\ingroup avr_pgmspace \\\\fn char *strtok_rP (char *string, …",null,null],[5,"strlen_PF","","\\\\ingroup avr_pgmspace \\\\fn size_t strlen_PF(uint_farptr_t …",null,null],[5,"strnlen_PF","","\\\\ingroup avr_pgmspace \\\\fn size_t strnlen_PF(uint_farptr_t …",null,null],[5,"memcpy_PF","","\\\\ingroup avr_pgmspace \\\\fn void *memcpy_PF(void *dest, …",null,null],[5,"strcpy_PF","","\\\\ingroup avr_pgmspace \\\\fn char *strcpy_PF(char *dst, …",null,null],[5,"strncpy_PF","","\\\\ingroup avr_pgmspace \\\\fn char *strncpy_PF(char *dst, …",null,null],[5,"strcat_PF","","\\\\ingroup avr_pgmspace \\\\fn char *strcat_PF(char *dst, …",null,null],[5,"strlcat_PF","","\\\\ingroup avr_pgmspace \\\\fn size_t strlcat_PF(char *dst, …",null,null],[5,"strncat_PF","","\\\\ingroup avr_pgmspace \\\\fn char *strncat_PF(char *dst, …",null,null],[5,"strcmp_PF","","\\\\ingroup avr_pgmspace \\\\fn int strcmp_PF(const char *s1, …",null,null],[5,"strncmp_PF","","\\\\ingroup avr_pgmspace \\\\fn int strncmp_PF(const char *s1, …",null,null],[5,"strcasecmp_PF","","\\\\ingroup avr_pgmspace \\\\fn int strcasecmp_PF(const char *…",null,null],[5,"strncasecmp_PF","","\\\\ingroup avr_pgmspace \\\\fn int strncasecmp_PF(const char *…",null,null],[5,"strstr_PF","","\\\\ingroup avr_pgmspace \\\\fn char *strstr_PF(const char *s1, …",null,null],[5,"strlcpy_PF","","\\\\ingroup avr_pgmspace \\\\fn size_t strlcpy_PF(char *dst, …",null,null],[5,"memcmp_PF","","\\\\ingroup avr_pgmspace \\\\fn int memcmp_PF(const void *s1, …",null,null],[5,"__strlen_P","","",null,null],[5,"ccp_write_io","","\\\\ingroup avr_cpufunc",null,null],[5,"eeprom_read_byte","","\\\\ingroup avr_eeprom Read one byte from EEPROM address \\\\a _…",null,null],[5,"eeprom_read_word","","\\\\ingroup avr_eeprom Read one 16-bit word (little endian) …",null,null],[5,"eeprom_read_dword","","\\\\ingroup avr_eeprom Read one 32-bit double word (little …",null,null],[5,"eeprom_read_float","","\\\\ingroup avr_eeprom Read one float value (little endian) …",null,null],[5,"eeprom_read_block","","\\\\ingroup avr_eeprom Read a block of \\\\a __n bytes from …",null,null],[5,"eeprom_write_byte","","\\\\ingroup avr_eeprom Write a byte \\\\a __value to EEPROM …",null,null],[5,"eeprom_write_word","","\\\\ingroup avr_eeprom Write a word \\\\a __value to EEPROM …",null,null],[5,"eeprom_write_dword","","\\\\ingroup avr_eeprom Write a 32-bit double word \\\\a __value …",null,null],[5,"eeprom_write_float","","\\\\ingroup avr_eeprom Write a float \\\\a __value to EEPROM …",null,null],[5,"eeprom_write_block","","\\\\ingroup avr_eeprom Write a block of \\\\a __n bytes to …",null,null],[5,"eeprom_update_byte","","\\\\ingroup avr_eeprom Update a byte \\\\a __value to EEPROM …",null,null],[5,"eeprom_update_word","","\\\\ingroup avr_eeprom Update a word \\\\a __value to EEPROM …",null,null],[5,"eeprom_update_dword","","\\\\ingroup avr_eeprom Update a 32-bit double word \\\\a __…",null,null],[5,"eeprom_update_float","","\\\\ingroup avr_eeprom Update a float \\\\a __value to EEPROM …",null,null],[5,"eeprom_update_block","","\\\\ingroup avr_eeprom Update a block of \\\\a __n bytes to …",null,null],[17,"__ERRNO_H_","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"__CTYPE_H_","","",null,null],[17,"_STDLIB_H_","","",null,null],[17,"RAND_MAX","","",null,null],[17,"RANDOM_MAX","","",null,null],[17,"DTOSTR_ALWAYS_SIGN","","",null,null],[17,"DTOSTR_PLUS_SIGN","","",null,null],[17,"DTOSTR_UPPERCASE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"__USING_MINT8","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT8_MIN","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MAX","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT64_MAX","","",null,null],[17,"INT64_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST64_MAX","","",null,null],[17,"INT_LEAST64_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST64_MAX","","",null,null],[17,"INT_FAST64_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTMAX_MAX","","",null,null],[17,"INTMAX_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"PRId8","","",null,null],[17,"PRIdLEAST8","","",null,null],[17,"PRIdFAST8","","",null,null],[17,"PRIi8","","",null,null],[17,"PRIiLEAST8","","",null,null],[17,"PRIiFAST8","","",null,null],[17,"PRId16","","",null,null],[17,"PRIdLEAST16","","",null,null],[17,"PRIdFAST16","","",null,null],[17,"PRIi16","","",null,null],[17,"PRIiLEAST16","","",null,null],[17,"PRIiFAST16","","",null,null],[17,"PRId32","","",null,null],[17,"PRIdLEAST32","","",null,null],[17,"PRIdFAST32","","",null,null],[17,"PRIi32","","",null,null],[17,"PRIiLEAST32","","",null,null],[17,"PRIiFAST32","","",null,null],[17,"PRIdPTR","","",null,null],[17,"PRIiPTR","","",null,null],[17,"PRIo8","","",null,null],[17,"PRIoLEAST8","","",null,null],[17,"PRIoFAST8","","",null,null],[17,"PRIu8","","",null,null],[17,"PRIuLEAST8","","",null,null],[17,"PRIuFAST8","","",null,null],[17,"PRIx8","","",null,null],[17,"PRIxLEAST8","","",null,null],[17,"PRIxFAST8","","",null,null],[17,"PRIX8","","",null,null],[17,"PRIXLEAST8","","",null,null],[17,"PRIXFAST8","","",null,null],[17,"PRIo16","","",null,null],[17,"PRIoLEAST16","","",null,null],[17,"PRIoFAST16","","",null,null],[17,"PRIu16","","",null,null],[17,"PRIuLEAST16","","",null,null],[17,"PRIuFAST16","","",null,null],[17,"PRIx16","","",null,null],[17,"PRIxLEAST16","","",null,null],[17,"PRIxFAST16","","",null,null],[17,"PRIX16","","",null,null],[17,"PRIXLEAST16","","",null,null],[17,"PRIXFAST16","","",null,null],[17,"PRIo32","","",null,null],[17,"PRIoLEAST32","","",null,null],[17,"PRIoFAST32","","",null,null],[17,"PRIu32","","",null,null],[17,"PRIuLEAST32","","",null,null],[17,"PRIuFAST32","","",null,null],[17,"PRIx32","","",null,null],[17,"PRIxLEAST32","","",null,null],[17,"PRIxFAST32","","",null,null],[17,"PRIX32","","",null,null],[17,"PRIXLEAST32","","",null,null],[17,"PRIXFAST32","","",null,null],[17,"PRIoPTR","","",null,null],[17,"PRIuPTR","","",null,null],[17,"PRIxPTR","","",null,null],[17,"PRIXPTR","","",null,null],[17,"SCNd8","","",null,null],[17,"SCNdLEAST8","","",null,null],[17,"SCNdFAST8","","",null,null],[17,"SCNi8","","",null,null],[17,"SCNiLEAST8","","",null,null],[17,"SCNiFAST8","","",null,null],[17,"SCNd16","","",null,null],[17,"SCNdLEAST16","","",null,null],[17,"SCNdFAST16","","",null,null],[17,"SCNi16","","",null,null],[17,"SCNiLEAST16","","",null,null],[17,"SCNiFAST16","","",null,null],[17,"SCNd32","","",null,null],[17,"SCNdLEAST32","","",null,null],[17,"SCNdFAST32","","",null,null],[17,"SCNi32","","",null,null],[17,"SCNiLEAST32","","",null,null],[17,"SCNiFAST32","","",null,null],[17,"SCNdPTR","","",null,null],[17,"SCNiPTR","","",null,null],[17,"SCNo8","","",null,null],[17,"SCNoLEAST8","","",null,null],[17,"SCNoFAST8","","",null,null],[17,"SCNu8","","",null,null],[17,"SCNuLEAST8","","",null,null],[17,"SCNuFAST8","","",null,null],[17,"SCNx8","","",null,null],[17,"SCNxLEAST8","","",null,null],[17,"SCNxFAST8","","",null,null],[17,"SCNo16","","",null,null],[17,"SCNoLEAST16","","",null,null],[17,"SCNoFAST16","","",null,null],[17,"SCNu16","","",null,null],[17,"SCNuLEAST16","","",null,null],[17,"SCNuFAST16","","",null,null],[17,"SCNx16","","",null,null],[17,"SCNxLEAST16","","",null,null],[17,"SCNxFAST16","","",null,null],[17,"SCNo32","","",null,null],[17,"SCNoLEAST32","","",null,null],[17,"SCNoFAST32","","",null,null],[17,"SCNu32","","",null,null],[17,"SCNuLEAST32","","",null,null],[17,"SCNuFAST32","","",null,null],[17,"SCNx32","","",null,null],[17,"SCNxLEAST32","","",null,null],[17,"SCNxFAST32","","",null,null],[17,"SCNoPTR","","",null,null],[17,"SCNuPTR","","",null,null],[17,"SCNxPTR","","",null,null],[17,"_SYS_TYPES_H_","","",null,null],[17,"ONE_HOUR","","",null,null],[17,"ONE_DEGREE","","",null,null],[17,"ONE_DAY","","",null,null],[17,"UNIX_OFFSET","","",null,null],[17,"NTP_OFFSET","","",null,null],[17,"M_E","","",null,null],[17,"M_LOG2E","","",null,null],[17,"M_LOG10E","","",null,null],[17,"M_LN2","","",null,null],[17,"M_LN10","","",null,null],[17,"M_PI","","",null,null],[17,"M_PI_2","","",null,null],[17,"M_PI_4","","",null,null],[17,"M_1_PI","","",null,null],[17,"M_2_PI","","",null,null],[17,"M_2_SQRTPI","","",null,null],[17,"M_SQRT2","","",null,null],[17,"M_SQRT1_2","","",null,null],[17,"_STRING_H_","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"_STDIO_H_","","",null,null],[17,"__GNUC_VA_LIST","","",null,null],[17,"__SRD","","",null,null],[17,"__SWR","","",null,null],[17,"__SSTR","","",null,null],[17,"__SPGM","","",null,null],[17,"__SERR","","",null,null],[17,"__SEOF","","",null,null],[17,"__SUNGET","","",null,null],[17,"__SMALLOC","","",null,null],[17,"EOF","","",null,null],[17,"_FDEV_SETUP_READ","","",null,null],[17,"_FDEV_SETUP_WRITE","","",null,null],[17,"_FDEV_SETUP_RW","","",null,null],[17,"_FDEV_ERR","","",null,null],[17,"_FDEV_EOF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"_IONBF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_ALLOCA_H","","",null,null],[17,"__SETJMP_H_","","",null,null],[17,"_JBLEN","","",null,null],[17,"DST_START_WEEK","","",null,null],[17,"DST_END_WEEK","","",null,null],[17,"_UTIL_ATOMIC_H_","","",null,null],[17,"_AVR_SFR_DEFS_H_","","",null,null],[17,"_SFR_ASM_COMPAT","","",null,null],[17,"__SFR_OFFSET","","",null,null],[17,"_AVR_IOXXX_H_","","",null,null],[17,"_AVR_IOM328P_H_","","",null,null],[17,"PINB0","","",null,null],[17,"PINB1","","",null,null],[17,"PINB2","","",null,null],[17,"PINB3","","",null,null],[17,"PINB4","","",null,null],[17,"PINB5","","",null,null],[17,"PINB6","","",null,null],[17,"PINB7","","",null,null],[17,"DDB0","","",null,null],[17,"DDB1","","",null,null],[17,"DDB2","","",null,null],[17,"DDB3","","",null,null],[17,"DDB4","","",null,null],[17,"DDB5","","",null,null],[17,"DDB6","","",null,null],[17,"DDB7","","",null,null],[17,"PORTB0","","",null,null],[17,"PORTB1","","",null,null],[17,"PORTB2","","",null,null],[17,"PORTB3","","",null,null],[17,"PORTB4","","",null,null],[17,"PORTB5","","",null,null],[17,"PORTB6","","",null,null],[17,"PORTB7","","",null,null],[17,"PINC0","","",null,null],[17,"PINC1","","",null,null],[17,"PINC2","","",null,null],[17,"PINC3","","",null,null],[17,"PINC4","","",null,null],[17,"PINC5","","",null,null],[17,"PINC6","","",null,null],[17,"DDC0","","",null,null],[17,"DDC1","","",null,null],[17,"DDC2","","",null,null],[17,"DDC3","","",null,null],[17,"DDC4","","",null,null],[17,"DDC5","","",null,null],[17,"DDC6","","",null,null],[17,"PORTC0","","",null,null],[17,"PORTC1","","",null,null],[17,"PORTC2","","",null,null],[17,"PORTC3","","",null,null],[17,"PORTC4","","",null,null],[17,"PORTC5","","",null,null],[17,"PORTC6","","",null,null],[17,"PIND0","","",null,null],[17,"PIND1","","",null,null],[17,"PIND2","","",null,null],[17,"PIND3","","",null,null],[17,"PIND4","","",null,null],[17,"PIND5","","",null,null],[17,"PIND6","","",null,null],[17,"PIND7","","",null,null],[17,"DDD0","","",null,null],[17,"DDD1","","",null,null],[17,"DDD2","","",null,null],[17,"DDD3","","",null,null],[17,"DDD4","","",null,null],[17,"DDD5","","",null,null],[17,"DDD6","","",null,null],[17,"DDD7","","",null,null],[17,"PORTD0","","",null,null],[17,"PORTD1","","",null,null],[17,"PORTD2","","",null,null],[17,"PORTD3","","",null,null],[17,"PORTD4","","",null,null],[17,"PORTD5","","",null,null],[17,"PORTD6","","",null,null],[17,"PORTD7","","",null,null],[17,"TOV0","","",null,null],[17,"OCF0A","","",null,null],[17,"OCF0B","","",null,null],[17,"TOV1","","",null,null],[17,"OCF1A","","",null,null],[17,"OCF1B","","",null,null],[17,"ICF1","","",null,null],[17,"TOV2","","",null,null],[17,"OCF2A","","",null,null],[17,"OCF2B","","",null,null],[17,"PCIF0","","",null,null],[17,"PCIF1","","",null,null],[17,"PCIF2","","",null,null],[17,"INTF0","","",null,null],[17,"INTF1","","",null,null],[17,"INT0","","",null,null],[17,"INT1","","",null,null],[17,"GPIOR00","","",null,null],[17,"GPIOR01","","",null,null],[17,"GPIOR02","","",null,null],[17,"GPIOR03","","",null,null],[17,"GPIOR04","","",null,null],[17,"GPIOR05","","",null,null],[17,"GPIOR06","","",null,null],[17,"GPIOR07","","",null,null],[17,"EERE","","",null,null],[17,"EEPE","","",null,null],[17,"EEMPE","","",null,null],[17,"EERIE","","",null,null],[17,"EEPM0","","",null,null],[17,"EEPM1","","",null,null],[17,"EEDR0","","",null,null],[17,"EEDR1","","",null,null],[17,"EEDR2","","",null,null],[17,"EEDR3","","",null,null],[17,"EEDR4","","",null,null],[17,"EEDR5","","",null,null],[17,"EEDR6","","",null,null],[17,"EEDR7","","",null,null],[17,"EEAR0","","",null,null],[17,"EEAR1","","",null,null],[17,"EEAR2","","",null,null],[17,"EEAR3","","",null,null],[17,"EEAR4","","",null,null],[17,"EEAR5","","",null,null],[17,"EEAR6","","",null,null],[17,"EEAR7","","",null,null],[17,"EEAR8","","",null,null],[17,"EEAR9","","",null,null],[17,"PSRSYNC","","",null,null],[17,"PSRASY","","",null,null],[17,"TSM","","",null,null],[17,"WGM00","","",null,null],[17,"WGM01","","",null,null],[17,"COM0B0","","",null,null],[17,"COM0B1","","",null,null],[17,"COM0A0","","",null,null],[17,"COM0A1","","",null,null],[17,"CS00","","",null,null],[17,"CS01","","",null,null],[17,"CS02","","",null,null],[17,"WGM02","","",null,null],[17,"FOC0B","","",null,null],[17,"FOC0A","","",null,null],[17,"TCNT0_0","","",null,null],[17,"TCNT0_1","","",null,null],[17,"TCNT0_2","","",null,null],[17,"TCNT0_3","","",null,null],[17,"TCNT0_4","","",null,null],[17,"TCNT0_5","","",null,null],[17,"TCNT0_6","","",null,null],[17,"TCNT0_7","","",null,null],[17,"OCR0A_0","","",null,null],[17,"OCR0A_1","","",null,null],[17,"OCR0A_2","","",null,null],[17,"OCR0A_3","","",null,null],[17,"OCR0A_4","","",null,null],[17,"OCR0A_5","","",null,null],[17,"OCR0A_6","","",null,null],[17,"OCR0A_7","","",null,null],[17,"OCR0B_0","","",null,null],[17,"OCR0B_1","","",null,null],[17,"OCR0B_2","","",null,null],[17,"OCR0B_3","","",null,null],[17,"OCR0B_4","","",null,null],[17,"OCR0B_5","","",null,null],[17,"OCR0B_6","","",null,null],[17,"OCR0B_7","","",null,null],[17,"GPIOR10","","",null,null],[17,"GPIOR11","","",null,null],[17,"GPIOR12","","",null,null],[17,"GPIOR13","","",null,null],[17,"GPIOR14","","",null,null],[17,"GPIOR15","","",null,null],[17,"GPIOR16","","",null,null],[17,"GPIOR17","","",null,null],[17,"GPIOR20","","",null,null],[17,"GPIOR21","","",null,null],[17,"GPIOR22","","",null,null],[17,"GPIOR23","","",null,null],[17,"GPIOR24","","",null,null],[17,"GPIOR25","","",null,null],[17,"GPIOR26","","",null,null],[17,"GPIOR27","","",null,null],[17,"SPR0","","",null,null],[17,"SPR1","","",null,null],[17,"CPHA","","",null,null],[17,"CPOL","","",null,null],[17,"MSTR","","",null,null],[17,"DORD","","",null,null],[17,"SPE","","",null,null],[17,"SPIE","","",null,null],[17,"SPI2X","","",null,null],[17,"WCOL","","",null,null],[17,"SPIF","","",null,null],[17,"SPDR0","","",null,null],[17,"SPDR1","","",null,null],[17,"SPDR2","","",null,null],[17,"SPDR3","","",null,null],[17,"SPDR4","","",null,null],[17,"SPDR5","","",null,null],[17,"SPDR6","","",null,null],[17,"SPDR7","","",null,null],[17,"ACIS0","","",null,null],[17,"ACIS1","","",null,null],[17,"ACIC","","",null,null],[17,"ACIE","","",null,null],[17,"ACI","","",null,null],[17,"ACO","","",null,null],[17,"ACBG","","",null,null],[17,"ACD","","",null,null],[17,"SE","","",null,null],[17,"SM0","","",null,null],[17,"SM1","","",null,null],[17,"SM2","","",null,null],[17,"PORF","","",null,null],[17,"EXTRF","","",null,null],[17,"BORF","","",null,null],[17,"WDRF","","",null,null],[17,"IVCE","","",null,null],[17,"IVSEL","","",null,null],[17,"PUD","","",null,null],[17,"BODSE","","",null,null],[17,"BODS","","",null,null],[17,"SELFPRGEN","","",null,null],[17,"SPMEN","","",null,null],[17,"PGERS","","",null,null],[17,"PGWRT","","",null,null],[17,"BLBSET","","",null,null],[17,"RWWSRE","","",null,null],[17,"SIGRD","","",null,null],[17,"RWWSB","","",null,null],[17,"SPMIE","","",null,null],[17,"WDP0","","",null,null],[17,"WDP1","","",null,null],[17,"WDP2","","",null,null],[17,"WDE","","",null,null],[17,"WDCE","","",null,null],[17,"WDP3","","",null,null],[17,"WDIE","","",null,null],[17,"WDIF","","",null,null],[17,"CLKPS0","","",null,null],[17,"CLKPS1","","",null,null],[17,"CLKPS2","","",null,null],[17,"CLKPS3","","",null,null],[17,"CLKPCE","","",null,null],[17,"PRADC","","",null,null],[17,"PRUSART0","","",null,null],[17,"PRSPI","","",null,null],[17,"PRTIM1","","",null,null],[17,"PRTIM0","","",null,null],[17,"PRTIM2","","",null,null],[17,"PRTWI","","",null,null],[17,"__AVR_HAVE_PRR","","",null,null],[17,"CAL0","","",null,null],[17,"CAL1","","",null,null],[17,"CAL2","","",null,null],[17,"CAL3","","",null,null],[17,"CAL4","","",null,null],[17,"CAL5","","",null,null],[17,"CAL6","","",null,null],[17,"CAL7","","",null,null],[17,"PCIE0","","",null,null],[17,"PCIE1","","",null,null],[17,"PCIE2","","",null,null],[17,"ISC00","","",null,null],[17,"ISC01","","",null,null],[17,"ISC10","","",null,null],[17,"ISC11","","",null,null],[17,"PCINT0","","",null,null],[17,"PCINT1","","",null,null],[17,"PCINT2","","",null,null],[17,"PCINT3","","",null,null],[17,"PCINT4","","",null,null],[17,"PCINT5","","",null,null],[17,"PCINT6","","",null,null],[17,"PCINT7","","",null,null],[17,"PCINT8","","",null,null],[17,"PCINT9","","",null,null],[17,"PCINT10","","",null,null],[17,"PCINT11","","",null,null],[17,"PCINT12","","",null,null],[17,"PCINT13","","",null,null],[17,"PCINT14","","",null,null],[17,"PCINT16","","",null,null],[17,"PCINT17","","",null,null],[17,"PCINT18","","",null,null],[17,"PCINT19","","",null,null],[17,"PCINT20","","",null,null],[17,"PCINT21","","",null,null],[17,"PCINT22","","",null,null],[17,"PCINT23","","",null,null],[17,"TOIE0","","",null,null],[17,"OCIE0A","","",null,null],[17,"OCIE0B","","",null,null],[17,"TOIE1","","",null,null],[17,"OCIE1A","","",null,null],[17,"OCIE1B","","",null,null],[17,"ICIE1","","",null,null],[17,"TOIE2","","",null,null],[17,"OCIE2A","","",null,null],[17,"OCIE2B","","",null,null],[17,"ADCL0","","",null,null],[17,"ADCL1","","",null,null],[17,"ADCL2","","",null,null],[17,"ADCL3","","",null,null],[17,"ADCL4","","",null,null],[17,"ADCL5","","",null,null],[17,"ADCL6","","",null,null],[17,"ADCL7","","",null,null],[17,"ADCH0","","",null,null],[17,"ADCH1","","",null,null],[17,"ADCH2","","",null,null],[17,"ADCH3","","",null,null],[17,"ADCH4","","",null,null],[17,"ADCH5","","",null,null],[17,"ADCH6","","",null,null],[17,"ADCH7","","",null,null],[17,"ADPS0","","",null,null],[17,"ADPS1","","",null,null],[17,"ADPS2","","",null,null],[17,"ADIE","","",null,null],[17,"ADIF","","",null,null],[17,"ADATE","","",null,null],[17,"ADSC","","",null,null],[17,"ADEN","","",null,null],[17,"ADTS0","","",null,null],[17,"ADTS1","","",null,null],[17,"ADTS2","","",null,null],[17,"ACME","","",null,null],[17,"MUX0","","",null,null],[17,"MUX1","","",null,null],[17,"MUX2","","",null,null],[17,"MUX3","","",null,null],[17,"ADLAR","","",null,null],[17,"REFS0","","",null,null],[17,"REFS1","","",null,null],[17,"ADC0D","","",null,null],[17,"ADC1D","","",null,null],[17,"ADC2D","","",null,null],[17,"ADC3D","","",null,null],[17,"ADC4D","","",null,null],[17,"ADC5D","","",null,null],[17,"AIN0D","","",null,null],[17,"AIN1D","","",null,null],[17,"WGM10","","",null,null],[17,"WGM11","","",null,null],[17,"COM1B0","","",null,null],[17,"COM1B1","","",null,null],[17,"COM1A0","","",null,null],[17,"COM1A1","","",null,null],[17,"CS10","","",null,null],[17,"CS11","","",null,null],[17,"CS12","","",null,null],[17,"WGM12","","",null,null],[17,"WGM13","","",null,null],[17,"ICES1","","",null,null],[17,"ICNC1","","",null,null],[17,"FOC1B","","",null,null],[17,"FOC1A","","",null,null],[17,"TCNT1L0","","",null,null],[17,"TCNT1L1","","",null,null],[17,"TCNT1L2","","",null,null],[17,"TCNT1L3","","",null,null],[17,"TCNT1L4","","",null,null],[17,"TCNT1L5","","",null,null],[17,"TCNT1L6","","",null,null],[17,"TCNT1L7","","",null,null],[17,"TCNT1H0","","",null,null],[17,"TCNT1H1","","",null,null],[17,"TCNT1H2","","",null,null],[17,"TCNT1H3","","",null,null],[17,"TCNT1H4","","",null,null],[17,"TCNT1H5","","",null,null],[17,"TCNT1H6","","",null,null],[17,"TCNT1H7","","",null,null],[17,"ICR1L0","","",null,null],[17,"ICR1L1","","",null,null],[17,"ICR1L2","","",null,null],[17,"ICR1L3","","",null,null],[17,"ICR1L4","","",null,null],[17,"ICR1L5","","",null,null],[17,"ICR1L6","","",null,null],[17,"ICR1L7","","",null,null],[17,"ICR1H0","","",null,null],[17,"ICR1H1","","",null,null],[17,"ICR1H2","","",null,null],[17,"ICR1H3","","",null,null],[17,"ICR1H4","","",null,null],[17,"ICR1H5","","",null,null],[17,"ICR1H6","","",null,null],[17,"ICR1H7","","",null,null],[17,"OCR1AL0","","",null,null],[17,"OCR1AL1","","",null,null],[17,"OCR1AL2","","",null,null],[17,"OCR1AL3","","",null,null],[17,"OCR1AL4","","",null,null],[17,"OCR1AL5","","",null,null],[17,"OCR1AL6","","",null,null],[17,"OCR1AL7","","",null,null],[17,"OCR1AH0","","",null,null],[17,"OCR1AH1","","",null,null],[17,"OCR1AH2","","",null,null],[17,"OCR1AH3","","",null,null],[17,"OCR1AH4","","",null,null],[17,"OCR1AH5","","",null,null],[17,"OCR1AH6","","",null,null],[17,"OCR1AH7","","",null,null],[17,"OCR1BL0","","",null,null],[17,"OCR1BL1","","",null,null],[17,"OCR1BL2","","",null,null],[17,"OCR1BL3","","",null,null],[17,"OCR1BL4","","",null,null],[17,"OCR1BL5","","",null,null],[17,"OCR1BL6","","",null,null],[17,"OCR1BL7","","",null,null],[17,"OCR1BH0","","",null,null],[17,"OCR1BH1","","",null,null],[17,"OCR1BH2","","",null,null],[17,"OCR1BH3","","",null,null],[17,"OCR1BH4","","",null,null],[17,"OCR1BH5","","",null,null],[17,"OCR1BH6","","",null,null],[17,"OCR1BH7","","",null,null],[17,"WGM20","","",null,null],[17,"WGM21","","",null,null],[17,"COM2B0","","",null,null],[17,"COM2B1","","",null,null],[17,"COM2A0","","",null,null],[17,"COM2A1","","",null,null],[17,"CS20","","",null,null],[17,"CS21","","",null,null],[17,"CS22","","",null,null],[17,"WGM22","","",null,null],[17,"FOC2B","","",null,null],[17,"FOC2A","","",null,null],[17,"TCNT2_0","","",null,null],[17,"TCNT2_1","","",null,null],[17,"TCNT2_2","","",null,null],[17,"TCNT2_3","","",null,null],[17,"TCNT2_4","","",null,null],[17,"TCNT2_5","","",null,null],[17,"TCNT2_6","","",null,null],[17,"TCNT2_7","","",null,null],[17,"OCR2_0","","",null,null],[17,"OCR2_1","","",null,null],[17,"OCR2_2","","",null,null],[17,"OCR2_3","","",null,null],[17,"OCR2_4","","",null,null],[17,"OCR2_5","","",null,null],[17,"OCR2_6","","",null,null],[17,"OCR2_7","","",null,null],[17,"TCR2BUB","","",null,null],[17,"TCR2AUB","","",null,null],[17,"OCR2BUB","","",null,null],[17,"OCR2AUB","","",null,null],[17,"TCN2UB","","",null,null],[17,"AS2","","",null,null],[17,"EXCLK","","",null,null],[17,"TWBR0","","",null,null],[17,"TWBR1","","",null,null],[17,"TWBR2","","",null,null],[17,"TWBR3","","",null,null],[17,"TWBR4","","",null,null],[17,"TWBR5","","",null,null],[17,"TWBR6","","",null,null],[17,"TWBR7","","",null,null],[17,"TWPS0","","",null,null],[17,"TWPS1","","",null,null],[17,"TWS3","","",null,null],[17,"TWS4","","",null,null],[17,"TWS5","","",null,null],[17,"TWS6","","",null,null],[17,"TWS7","","",null,null],[17,"TWGCE","","",null,null],[17,"TWA0","","",null,null],[17,"TWA1","","",null,null],[17,"TWA2","","",null,null],[17,"TWA3","","",null,null],[17,"TWA4","","",null,null],[17,"TWA5","","",null,null],[17,"TWA6","","",null,null],[17,"TWD0","","",null,null],[17,"TWD1","","",null,null],[17,"TWD2","","",null,null],[17,"TWD3","","",null,null],[17,"TWD4","","",null,null],[17,"TWD5","","",null,null],[17,"TWD6","","",null,null],[17,"TWD7","","",null,null],[17,"TWIE","","",null,null],[17,"TWEN","","",null,null],[17,"TWWC","","",null,null],[17,"TWSTO","","",null,null],[17,"TWSTA","","",null,null],[17,"TWEA","","",null,null],[17,"TWINT","","",null,null],[17,"TWAM0","","",null,null],[17,"TWAM1","","",null,null],[17,"TWAM2","","",null,null],[17,"TWAM3","","",null,null],[17,"TWAM4","","",null,null],[17,"TWAM5","","",null,null],[17,"TWAM6","","",null,null],[17,"MPCM0","","",null,null],[17,"U2X0","","",null,null],[17,"UPE0","","",null,null],[17,"DOR0","","",null,null],[17,"FE0","","",null,null],[17,"UDRE0","","",null,null],[17,"TXC0","","",null,null],[17,"RXC0","","",null,null],[17,"TXB80","","",null,null],[17,"RXB80","","",null,null],[17,"UCSZ02","","",null,null],[17,"TXEN0","","",null,null],[17,"RXEN0","","",null,null],[17,"UDRIE0","","",null,null],[17,"TXCIE0","","",null,null],[17,"RXCIE0","","",null,null],[17,"UCPOL0","","",null,null],[17,"UCSZ00","","",null,null],[17,"UCPHA0","","",null,null],[17,"UCSZ01","","",null,null],[17,"UDORD0","","",null,null],[17,"USBS0","","",null,null],[17,"UPM00","","",null,null],[17,"UPM01","","",null,null],[17,"UMSEL00","","",null,null],[17,"UMSEL01","","",null,null],[17,"UBRR0_0","","",null,null],[17,"UBRR0_1","","",null,null],[17,"UBRR0_2","","",null,null],[17,"UBRR0_3","","",null,null],[17,"UBRR0_4","","",null,null],[17,"UBRR0_5","","",null,null],[17,"UBRR0_6","","",null,null],[17,"UBRR0_7","","",null,null],[17,"UBRR0_8","","",null,null],[17,"UBRR0_9","","",null,null],[17,"UBRR0_10","","",null,null],[17,"UBRR0_11","","",null,null],[17,"UDR0_0","","",null,null],[17,"UDR0_1","","",null,null],[17,"UDR0_2","","",null,null],[17,"UDR0_3","","",null,null],[17,"UDR0_4","","",null,null],[17,"UDR0_5","","",null,null],[17,"UDR0_6","","",null,null],[17,"UDR0_7","","",null,null],[17,"INT0_vect_num","","",null,null],[17,"INT1_vect_num","","",null,null],[17,"PCINT0_vect_num","","",null,null],[17,"PCINT1_vect_num","","",null,null],[17,"PCINT2_vect_num","","",null,null],[17,"WDT_vect_num","","",null,null],[17,"TIMER2_COMPA_vect_num","","",null,null],[17,"TIMER2_COMPB_vect_num","","",null,null],[17,"TIMER2_OVF_vect_num","","",null,null],[17,"TIMER1_CAPT_vect_num","","",null,null],[17,"TIMER1_COMPA_vect_num","","",null,null],[17,"TIMER1_COMPB_vect_num","","",null,null],[17,"TIMER1_OVF_vect_num","","",null,null],[17,"TIMER0_COMPA_vect_num","","",null,null],[17,"TIMER0_COMPB_vect_num","","",null,null],[17,"TIMER0_OVF_vect_num","","",null,null],[17,"SPI_STC_vect_num","","",null,null],[17,"USART_RX_vect_num","","",null,null],[17,"USART_UDRE_vect_num","","",null,null],[17,"USART_TX_vect_num","","",null,null],[17,"ADC_vect_num","","",null,null],[17,"EE_READY_vect_num","","",null,null],[17,"ANALOG_COMP_vect_num","","",null,null],[17,"TWI_vect_num","","",null,null],[17,"SPM_READY_vect_num","","",null,null],[17,"_VECTORS_SIZE","","",null,null],[17,"SPM_PAGESIZE","","",null,null],[17,"RAMSTART","","",null,null],[17,"RAMEND","","",null,null],[17,"XRAMSIZE","","",null,null],[17,"XRAMEND","","",null,null],[17,"E2END","","",null,null],[17,"E2PAGESIZE","","",null,null],[17,"FLASHEND","","",null,null],[17,"FUSE_MEMORY_SIZE","","",null,null],[17,"EFUSE_DEFAULT","","",null,null],[17,"SIGNATURE_0","","",null,null],[17,"SIGNATURE_1","","",null,null],[17,"SIGNATURE_2","","",null,null],[17,"SLEEP_MODE_IDLE","","",null,null],[17,"SLEEP_MODE_ADC","","",null,null],[17,"SLEEP_MODE_PWR_DOWN","","",null,null],[17,"SLEEP_MODE_PWR_SAVE","","",null,null],[17,"SLEEP_MODE_STANDBY","","",null,null],[17,"SLEEP_MODE_EXT_STANDBY","","",null,null],[17,"_AVR_PORTPINS_H_","","",null,null],[17,"PORT7","","",null,null],[17,"PORT6","","",null,null],[17,"PORT5","","",null,null],[17,"PORT4","","",null,null],[17,"PORT3","","",null,null],[17,"PORT2","","",null,null],[17,"PORT1","","",null,null],[17,"PORT0","","",null,null],[17,"DD7","","",null,null],[17,"DD6","","",null,null],[17,"DD5","","",null,null],[17,"DD4","","",null,null],[17,"DD3","","",null,null],[17,"DD2","","",null,null],[17,"DD1","","",null,null],[17,"DD0","","",null,null],[17,"PIN7","","",null,null],[17,"PIN6","","",null,null],[17,"PIN5","","",null,null],[17,"PIN4","","",null,null],[17,"PIN3","","",null,null],[17,"PIN2","","",null,null],[17,"PIN1","","",null,null],[17,"PIN0","","",null,null],[17,"PB0","","",null,null],[17,"PB1","","",null,null],[17,"PB2","","",null,null],[17,"PB3","","",null,null],[17,"PB4","","",null,null],[17,"PB5","","",null,null],[17,"PB6","","",null,null],[17,"PB7","","",null,null],[17,"PC0","","",null,null],[17,"PC1","","",null,null],[17,"PC2","","",null,null],[17,"PC3","","",null,null],[17,"PC4","","",null,null],[17,"PC5","","",null,null],[17,"PC6","","",null,null],[17,"PD0","","",null,null],[17,"PD1","","",null,null],[17,"PD2","","",null,null],[17,"PD3","","",null,null],[17,"PD4","","",null,null],[17,"PD5","","",null,null],[17,"PD6","","",null,null],[17,"PD7","","",null,null],[17,"SREG_C","","",null,null],[17,"SREG_Z","","",null,null],[17,"SREG_N","","",null,null],[17,"SREG_V","","",null,null],[17,"SREG_S","","",null,null],[17,"SREG_H","","",null,null],[17,"SREG_T","","",null,null],[17,"SREG_I","","",null,null],[17,"_HAVE_AVR_STACK_POINTER_HI","","",null,null],[17,"__AVR_LIBC_VERSION_STRING__","","",null,null],[17,"__AVR_LIBC_VERSION__","","",null,null],[17,"__AVR_LIBC_DATE_STRING__","","",null,null],[17,"__AVR_LIBC_DATE_","","",null,null],[17,"__AVR_LIBC_MAJOR__","","",null,null],[17,"__AVR_LIBC_MINOR__","","",null,null],[17,"__AVR_LIBC_REVISION__","","",null,null],[17,"_AVR_FUSE_H_","","",null,null],[17,"_AVR_LOCK_H_","","",null,null],[17,"LB_MODE_1","","",null,null],[17,"LB_MODE_2","","",null,null],[17,"LB_MODE_3","","",null,null],[17,"BLB0_MODE_1","","",null,null],[17,"BLB0_MODE_2","","",null,null],[17,"BLB0_MODE_3","","",null,null],[17,"BLB0_MODE_4","","",null,null],[17,"BLB1_MODE_1","","",null,null],[17,"BLB1_MODE_2","","",null,null],[17,"BLB1_MODE_3","","",null,null],[17,"BLB1_MODE_4","","",null,null],[17,"LOCKBITS_DEFAULT","","",null,null],[17,"_UTIL_TWI_H_","","",null,null],[17,"TW_START","","",null,null],[17,"TW_REP_START","","",null,null],[17,"TW_MT_SLA_ACK","","",null,null],[17,"TW_MT_SLA_NACK","","",null,null],[17,"TW_MT_DATA_ACK","","",null,null],[17,"TW_MT_DATA_NACK","","",null,null],[17,"TW_MT_ARB_LOST","","",null,null],[17,"TW_MR_ARB_LOST","","",null,null],[17,"TW_MR_SLA_ACK","","",null,null],[17,"TW_MR_SLA_NACK","","",null,null],[17,"TW_MR_DATA_ACK","","",null,null],[17,"TW_MR_DATA_NACK","","",null,null],[17,"TW_ST_SLA_ACK","","",null,null],[17,"TW_ST_ARB_LOST_SLA_ACK","","",null,null],[17,"TW_ST_DATA_ACK","","",null,null],[17,"TW_ST_DATA_NACK","","",null,null],[17,"TW_ST_LAST_DATA","","",null,null],[17,"TW_SR_SLA_ACK","","",null,null],[17,"TW_SR_ARB_LOST_SLA_ACK","","",null,null],[17,"TW_SR_GCALL_ACK","","",null,null],[17,"TW_SR_ARB_LOST_GCALL_ACK","","",null,null],[17,"TW_SR_DATA_ACK","","",null,null],[17,"TW_SR_DATA_NACK","","",null,null],[17,"TW_SR_GCALL_DATA_ACK","","",null,null],[17,"TW_SR_GCALL_DATA_NACK","","",null,null],[17,"TW_SR_STOP","","",null,null],[17,"TW_NO_INFO","","",null,null],[17,"TW_BUS_ERROR","","",null,null],[17,"TW_READ","","",null,null],[17,"TW_WRITE","","",null,null],[17,"_AVR_SIGNATURE_H_","","",null,null],[17,"_AVR_SLEEP_H_","","",null,null],[17,"__HAS_DELAY_CYCLES","","",null,null],[17,"__PGMSPACE_H_","","",null,null],[17,"_AVR_CPUFUNC_H_","","",null,null],[17,"_AVR_POWER_H_","","",null,null],[17,"_AVR_BOOT_H_","","",null,null],[17,"_AVR_EEPROM_H_","","",null,null],[17,"MB_LEN_MAX","","",null,null],[17,"__SPM_ENABLE","","",null,null],[17,"__COMMON_ASB","","",null,null],[17,"__COMMON_ASRE","","",null,null],[17,"BLB12","","",null,null],[17,"BLB11","","",null,null],[17,"BLB02","","",null,null],[17,"BLB01","","",null,null],[17,"GET_LOW_FUSE_BITS","","",null,null],[17,"GET_LOCK_BITS","","",null,null],[17,"GET_EXTENDED_FUSE_BITS","","",null,null],[17,"GET_HIGH_FUSE_BITS","","",null,null],[6,"size_t","","",null,null],[6,"wchar_t","","",null,null],[3,"div_t","","Result type for function div().",null,null],[12,"quot","","< The Quotient.",0,null],[12,"rem","","< The Remainder.",0,null],[3,"ldiv_t","","Result type for function ldiv().",null,null],[12,"quot","","< The Quotient.",1,null],[12,"rem","","< The Remainder.",1,null],[6,"__compar_fn_t","","Comparision function type for qsort(), just for …",null,null],[6,"int_least8_t","","\\\\ingroup avr_stdint signed int with at least 8 bits.",null,null],[6,"uint_least8_t","","\\\\ingroup avr_stdint unsigned int with at least 8 bits.",null,null],[6,"int_least16_t","","\\\\ingroup avr_stdint signed int with at least 16 bits.",null,null],[6,"uint_least16_t","","\\\\ingroup avr_stdint unsigned int with at least 16 bits.",null,null],[6,"int_least32_t","","\\\\ingroup avr_stdint signed int with at least 32 bits.",null,null],[6,"uint_least32_t","","\\\\ingroup avr_stdint unsigned int with at least 32 bits.",null,null],[6,"int_least64_t","","\\\\ingroup avr_stdint signed int with at least 64 bits. …",null,null],[6,"uint_least64_t","","\\\\ingroup avr_stdint unsigned int with at least 64 bits. …",null,null],[6,"int_fast8_t","","\\\\ingroup avr_stdint fastest signed int with at least 8 …",null,null],[6,"uint_fast8_t","","\\\\ingroup avr_stdint fastest unsigned int with at least 8 …",null,null],[6,"int_fast16_t","","\\\\ingroup avr_stdint fastest signed int with at least 16 …",null,null],[6,"uint_fast16_t","","\\\\ingroup avr_stdint fastest unsigned int with at least 16 …",null,null],[6,"int_fast32_t","","\\\\ingroup avr_stdint fastest signed int with at least 32 …",null,null],[6,"uint_fast32_t","","\\\\ingroup avr_stdint fastest unsigned int with at least 32 …",null,null],[6,"int_fast64_t","","\\\\ingroup avr_stdint fastest signed int with at least 64 …",null,null],[6,"uint_fast64_t","","\\\\ingroup avr_stdint fastest unsigned int with at least 64 …",null,null],[6,"intmax_t","","\\\\ingroup avr_stdint largest signed int available.",null,null],[6,"uintmax_t","","\\\\ingroup avr_stdint largest unsigned int available.",null,null],[6,"int_farptr_t","","\\\\ingroup avr_inttypes signed integer type that can hold a …",null,null],[6,"uint_farptr_t","","\\\\ingroup avr_inttypes unsigned integer type that can hold …",null,null],[6,"off_t","","",null,null],[6,"time_t","","time_t represents seconds elapsed from Midnight, Jan 1 …",null,null],[3,"tm","","The tm structure contains a representation of time …",null,null],[12,"tm_sec","","< seconds after the minute - [ 0 to 59 ]",2,null],[12,"tm_min","","< minutes after the hour - [ 0 to 59 ]",2,null],[12,"tm_hour","","< hours since midnight - [ 0 to 23 ]",2,null],[12,"tm_mday","","< day of the month - [ 1 to 31 ]",2,null],[12,"tm_wday","","< days since Sunday - [ 0 to 6 ]",2,null],[12,"tm_mon","","< months since January - [ 0 to 11 ]",2,null],[12,"tm_year","","< years since 1900",2,null],[12,"tm_yday","","< days since January 1 - [ 0 to 365 ]",2,null],[12,"tm_isdst","","< Daylight Saving Time flag",2,null],[6,"clock_t","","",null,null],[17,"_WEEK_DAYS__SUNDAY","","",null,null],[17,"_WEEK_DAYS__MONDAY","","",null,null],[17,"_WEEK_DAYS__TUESDAY","","",null,null],[17,"_WEEK_DAYS__WEDNESDAY","","",null,null],[17,"_WEEK_DAYS__THURSDAY","","",null,null],[17,"_WEEK_DAYS__FRIDAY","","",null,null],[17,"_WEEK_DAYS__SATURDAY","","",null,null],[6,"_WEEK_DAYS_","","Enumerated labels for the days of the week.",null,null],[17,"_MONTHS__JANUARY","","",null,null],[17,"_MONTHS__FEBRUARY","","",null,null],[17,"_MONTHS__MARCH","","",null,null],[17,"_MONTHS__APRIL","","",null,null],[17,"_MONTHS__MAY","","",null,null],[17,"_MONTHS__JUNE","","",null,null],[17,"_MONTHS__JULY","","",null,null],[17,"_MONTHS__AUGUST","","",null,null],[17,"_MONTHS__SEPTEMBER","","",null,null],[17,"_MONTHS__OCTOBER","","",null,null],[17,"_MONTHS__NOVEMBER","","",null,null],[17,"_MONTHS__DECEMBER","","",null,null],[6,"_MONTHS_","","Enumerated labels for the months.",null,null],[3,"week_date","","Structure which represents a date as a year, week number …",null,null],[12,"year","","< year number (Gregorian calendar)",3,null],[12,"week","","< week number (#1 is where first Thursday is in)",3,null],[12,"day","","< day within week",3,null],[3,"lconv","","",null,null],[6,"va_list","","",null,null],[6,"__gnuc_va_list","","",null,null],[3,"__file","","",null,null],[12,"buf","","",4,null],[12,"unget","","",4,null],[12,"flags","","",4,null],[12,"size","","",4,null],[12,"len","","",4,null],[12,"put","","",4,null],[12,"get","","",4,null],[12,"udata","","",4,null],[6,"FILE","","\\\\c FILE is the opaque structure that is passed around …",null,null],[6,"fpos_t","","",null,null],[3,"max_align_t","","",null,null],[12,"__clang_max_align_nonce1","","",5,null],[12,"__clang_max_align_nonce2","","",5,null],[3,"_jmp_buf","","",null,null],[12,"_jb","","",6,null],[6,"jmp_buf","","",null,null],[6,"sighandler_t","","",null,null],[6,"sigset_t","","",null,null],[3,"__fuse_t","","",null,null],[12,"low","","",7,null],[12,"high","","",7,null],[12,"extended","","",7,null],[17,"clock_div_t_clock_div_1","","",null,null],[17,"clock_div_t_clock_div_2","","",null,null],[17,"clock_div_t_clock_div_4","","",null,null],[17,"clock_div_t_clock_div_8","","",null,null],[17,"clock_div_t_clock_div_16","","",null,null],[17,"clock_div_t_clock_div_32","","",null,null],[17,"clock_div_t_clock_div_64","","",null,null],[17,"clock_div_t_clock_div_128","","",null,null],[17,"clock_div_t_clock_div_256","","",null,null],[6,"clock_div_t","","",null,null],[6,"__builtin_va_list","","",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["div_t",3]]],[11,"clone","","",1,[[],["ldiv_t",3]]],[11,"clone","","",2,[[],["tm",3]]],[11,"clone","","",3,[[],["week_date",3]]],[11,"clone","","",8,[[],["lconv",3]]],[11,"clone","","",4,[[],["__file",3]]],[11,"clone","","",5,[[],["max_align_t",3]]],[11,"clone","","",6,[[],["_jmp_buf",3]]],[11,"clone","","",7,[[],["__fuse_t",3]]]],"p":[[3,"div_t"],[3,"ldiv_t"],[3,"tm"],[3,"week_date"],[3,"__file"],[3,"max_align_t"],[3,"_jmp_buf"],[3,"__fuse_t"],[3,"lconv"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);